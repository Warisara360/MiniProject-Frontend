{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Swal from \"sweetalert2\";\nimport axios from \"axios\";\nimport AppbarUser from \"./AppbarUser.vue\";\nexport default {\n  name: \"EditFood\",\n  components: {\n    AppbarUser\n  },\n  data() {\n    return {\n      desserts: [],\n      selectedItem: null,\n      dialogVisible: false,\n      items: [{\n        value: 1,\n        text: \"ต้ม\"\n      }, {\n        value: 2,\n        text: \"ผัด\"\n      }, {\n        value: 3,\n        text: \"ทอด\"\n      }, {\n        value: 4,\n        text: \"ยำ\"\n      }]\n    };\n  },\n  mounted() {\n    this.getMenuData();\n  },\n  methods: {\n    goToAddmenu() {\n      this.$router.push({\n        path: \"/addmenu\"\n      }).catch(() => {});\n    },\n    openDialog(selectedItem) {\n      this.selectedItem = selectedItem;\n      this.dialogVisible = true;\n      this.menuName = selectedItem.nameMenu;\n      this.details = selectedItem.detailMenu;\n      this.ingredient = selectedItem.ingerMenu;\n      this.gastronomy = selectedItem.gastroMenu;\n      this.selectedMenuType = selectedItem.menuType.menuTypeId;\n    },\n    async getMenuData() {\n      const member_id = JSON.parse(localStorage.getItem(\"dataUser\")).memberId;\n      await axios.get(`http://localhost:9001/menu/${member_id}`).then(response => {\n        this.desserts = response.data;\n      }).catch(error => {\n        console.error(\"There was an error!\", error);\n      });\n    },\n    async updateMenu() {\n      const updatedMenu = {\n        menuId: this.selectedItem.menuId,\n        nameMenu: this.menuName,\n        detailMenu: this.details,\n        ingerMenu: this.ingredient,\n        gastroMenu: this.gastronomy,\n        menuType: {\n          menuTypeId: this.selectedMenuType\n        }\n      };\n      await axios.put(`http://localhost:9001/${this.selectedItem.menuId}`, updatedMenu).then(response => {\n        Swal.fire({\n          icon: \"success\",\n          title: \"Menu updated successfully\"\n        });\n        this.getMenuData();\n      }).catch(error => {\n        console.error(\"There was an error!\", error);\n        Swal.fire({\n          icon: \"error\",\n          title: \"Error updating menu\"\n        });\n      });\n    },\n    async deleteMenu(selectedItem) {\n      if (selectedItem) {\n        const confirmationResult = await Swal.fire({\n          title: \"ต้องการลบเมนูนี้ใช่หรือไม่\",\n          icon: \"warning\",\n          showCancelButton: true,\n          confirmButtonColor: \"#3085d6\",\n          cancelButtonColor: \"#d33\",\n          confirmButtonText: \"ยืนยัน\"\n        });\n        if (confirmationResult.isConfirmed) {\n          const deleteMenu = {\n            menuId: selectedItem.menuId\n          };\n          try {\n            // Use a try-catch block instead of .then and .catch for axios\n            const response = await axios.delete(`http://localhost:9001/${selectedItem.menuId}`, {\n              data: deleteMenu // Pass the data as an object here\n            });\n\n            // Handle successful deletion\n          } catch (error) {\n            console.error(\"There was an error!\", error);\n            Swal.fire({\n              icon: \"error\",\n              title: \"Error deleting menu\"\n            });\n          }\n        } else {\n          // The user canceled the action\n          console.log(\"Deletion canceled.\");\n        }\n      } else {\n        console.error(\"selectedItem is null or undefined.\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["Swal","axios","AppbarUser","name","components","data","desserts","selectedItem","dialogVisible","items","value","text","mounted","getMenuData","methods","goToAddmenu","$router","push","path","catch","openDialog","menuName","nameMenu","details","detailMenu","ingredient","ingerMenu","gastronomy","gastroMenu","selectedMenuType","menuType","menuTypeId","member_id","JSON","parse","localStorage","getItem","memberId","get","then","response","error","console","updateMenu","updatedMenu","menuId","put","fire","icon","title","deleteMenu","confirmationResult","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","isConfirmed","delete","log"],"sources":["src/components/EditFood.vue"],"sourcesContent":["<template>\r\n  <div style=\"background-color: #e0f2f1; height: 100%\">\r\n    <AppbarUser />\r\n    <div>\r\n      <div>\r\n        <div\r\n          style=\"\r\n            display: flex;\r\n            justify-content: center;\r\n            align-items: center;\r\n            padding-top: 40px;\r\n            font-size: 30px;\r\n          \"\r\n        >\r\n          <h3>จัดการอาหาร</h3>\r\n        </div>\r\n\r\n        <div\r\n          style=\"display: flex; justify-content: center; align-items: center\"\r\n        >\r\n          <div style=\"width: 80%\">\r\n            <div\r\n              style=\"\r\n                display: flex;\r\n                justify-content: right;\r\n                align-items: right;\r\n                padding-right: 20px;\r\n              \"\r\n            >\r\n              <v-btn color=\"success\" @click=\"goToAddmenu\"> เพิ่มเมนู</v-btn>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <v-row style=\"margin: 50px\">\r\n            <v-col v-for=\"n in desserts\" :key=\"n\" cols=\"4\">\r\n              <v-hover v-slot=\"{ hover }\" open-delay=\"200\">\r\n                <v-card\r\n                  :elevation=\"hover ? 16 : 2\"\r\n                  style=\"width: 500px; height: 300px; border-radius: 20px\"\r\n                >\r\n                  <div style=\"padding: 20px\">\r\n                    <div style=\"display: flex; justify-content: center\">\r\n                      <h1>\r\n                        {{ n.nameMenu }}\r\n                      </h1>\r\n                    </div>\r\n\r\n                    <div style=\"padding-top: 5px\">\r\n                      <v-card\r\n                        class=\"overflow-x-auto lighten-5\"\r\n                        :elevation=\"0\"\r\n                        style=\"width: 500px; height: 150px; border-radius: 20px\"\r\n                      >\r\n                        <v-card-title>\r\n                          <p style=\"font-size: 17px\">{{ n.detailMenu }}</p>\r\n                        </v-card-title>\r\n                      </v-card>\r\n                    </div>\r\n                    <div\r\n                      style=\"\r\n                        padding-top: 5px;\r\n                        display: flex;\r\n                        justify-content: center;\r\n                      \"\r\n                    >\r\n                      <v-card-title>\r\n                        <v-btn\r\n                          style=\"margin-right: 10px\"\r\n                          color=\"success\"\r\n                          @click=\"openDialog(n)\"\r\n                          >แก้ไข</v-btn\r\n                        >\r\n                        <v-btn color=\"error\" @click=\"deleteMenu(n)\">ลบ</v-btn>\r\n                      </v-card-title>\r\n                    </div>\r\n                  </div>\r\n                </v-card>\r\n              </v-hover>\r\n            </v-col>\r\n          </v-row>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <v-dialog v-model=\"dialogVisible\" max-width=\"500\">\r\n      <template>\r\n        <v-card width=\"500\" height=\"500\" class=\"overflow-auto\">\r\n          <v-card-text>\r\n            <v-form\r\n              ref=\"LoginForm\"\r\n              v-model=\"valid\"\r\n              lazy-validation\r\n              style=\"margin-top: 10px\"\r\n            >\r\n              <v-text-field\r\n                v-model=\"menuName\"\r\n                label=\"ชื่ออาหาร\"\r\n                required\r\n                outlined\r\n              ></v-text-field>\r\n\r\n              <v-textarea\r\n                outlined\r\n                name=\"details\"\r\n                label=\"รายละเอียด\"\r\n                v-model=\"details\"\r\n                rows=\"3\"\r\n                row-height=\"25\"\r\n              ></v-textarea>\r\n              <v-textarea\r\n                outlined\r\n                name=\"ingredient \"\r\n                v-model=\"ingredient\"\r\n                label=\"ส่วนประกอบ\"\r\n                value=\"\"\r\n                rows=\"3\"\r\n                row-height=\"25\"\r\n              ></v-textarea>\r\n              <v-textarea\r\n                outlined\r\n                v-model=\"gastronomy\"\r\n                name=\"gastronomy\"\r\n                label=\"วิธีทำ\"\r\n                value=\"\"\r\n                rows=\"3\"\r\n                row-height=\"25\"\r\n              ></v-textarea>\r\n              <v-select\r\n                v-model=\"selectedMenuType\"\r\n                :items=\"items\"\r\n                label=\"ประเภทอาหาร\"\r\n                outlined\r\n              ></v-select>\r\n              <div\r\n                style=\"\r\n                  display: flex;\r\n                  justify-content: center;\r\n                  align-items: center;\r\n                \"\r\n              >\r\n                <v-btn color=\"success\" @click=\"updateMenu\">บันทึก</v-btn>\r\n              </div>\r\n            </v-form>\r\n          </v-card-text>\r\n        </v-card>\r\n      </template>\r\n    </v-dialog>\r\n  </div>\r\n</template>\r\n\r\n\r\n\r\n<script>\r\nimport Swal from \"sweetalert2\";\r\nimport axios from \"axios\";\r\nimport AppbarUser from \"./AppbarUser.vue\";\r\n\r\nexport default {\r\n  name: \"EditFood\",\r\n  components: {\r\n    AppbarUser,\r\n  },\r\n  data() {\r\n    return {\r\n      desserts: [],\r\n      selectedItem: null,\r\n      dialogVisible: false,\r\n      items: [\r\n        { value: 1, text: \"ต้ม\" },\r\n        { value: 2, text: \"ผัด\" },\r\n        { value: 3, text: \"ทอด\" },\r\n        { value: 4, text: \"ยำ\" },\r\n      ],\r\n    };\r\n  },\r\n  mounted() {\r\n    this.getMenuData();\r\n  },\r\n  methods: {\r\n    goToAddmenu() {\r\n      this.$router.push({ path: \"/addmenu\" }).catch(() => {});\r\n    },\r\n\r\n    openDialog(selectedItem) {\r\n      this.selectedItem = selectedItem;\r\n      this.dialogVisible = true;\r\n      this.menuName = selectedItem.nameMenu;\r\n      this.details = selectedItem.detailMenu;\r\n      this.ingredient = selectedItem.ingerMenu;\r\n      this.gastronomy = selectedItem.gastroMenu;\r\n      this.selectedMenuType = selectedItem.menuType.menuTypeId;\r\n    },\r\n\r\n    async getMenuData() {\r\n      const member_id = JSON.parse(localStorage.getItem(\"dataUser\")).memberId;\r\n      await axios\r\n        .get(`http://localhost:9001/menu/${member_id}`)\r\n        .then((response) => {\r\n          this.desserts = response.data;\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"There was an error!\", error);\r\n        });\r\n    },\r\n\r\n    async updateMenu() {\r\n      const updatedMenu = {\r\n        menuId: this.selectedItem.menuId,\r\n        nameMenu: this.menuName,\r\n        detailMenu: this.details,\r\n        ingerMenu: this.ingredient,\r\n        gastroMenu: this.gastronomy,\r\n        menuType: { menuTypeId: this.selectedMenuType },\r\n      };\r\n\r\n      await axios\r\n        .put(`http://localhost:9001/${this.selectedItem.menuId}`, updatedMenu)\r\n        .then((response) => {\r\n          Swal.fire({\r\n            icon: \"success\",\r\n            title: \"Menu updated successfully\",\r\n          });\r\n          this.getMenuData();\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"There was an error!\", error);\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title: \"Error updating menu\",\r\n          });\r\n        });\r\n    },\r\n\r\n    async deleteMenu(selectedItem) {\r\n  if (selectedItem) {\r\n \r\n    const confirmationResult = await Swal.fire({\r\n      title: \"ต้องการลบเมนูนี้ใช่หรือไม่\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"ยืนยัน\",\r\n    });\r\n\r\n    if (confirmationResult.isConfirmed) {\r\n      const deleteMenu = {\r\n        menuId: selectedItem.menuId,\r\n      };\r\n\r\n      try {\r\n        // Use a try-catch block instead of .then and .catch for axios\r\n        const response = await axios.delete(`http://localhost:9001/${selectedItem.menuId}`, {\r\n          data: deleteMenu, // Pass the data as an object here\r\n        });\r\n\r\n        // Handle successful deletion\r\n      } catch (error) {\r\n        console.error(\"There was an error!\", error);\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Error deleting menu\",\r\n        });\r\n      }\r\n    } else {\r\n      // The user canceled the action\r\n      console.log(\"Deletion canceled.\");\r\n    }\r\n  } else {\r\n    console.error(\"selectedItem is null or undefined.\");\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n    \r\n  },\r\n};\r\n</script>\r\n<style lang=\"sass\" scoped>\r\n.v-card.on-hover.theme--dark\r\n  background-color: rgba(#FFF, 0.8)\r\n</style>\r\n"],"mappings":";AA2JA,OAAAA,IAAA;AACA,OAAAC,KAAA;AACA,OAAAC,UAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAF;EACA;EACAG,KAAA;IACA;MACAC,QAAA;MACAC,YAAA;MACAC,aAAA;MACAC,KAAA,GACA;QAAAC,KAAA;QAAAC,IAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,IAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,IAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,IAAA;MAAA;IAEA;EACA;EACAC,QAAA;IACA,KAAAC,WAAA;EACA;EACAC,OAAA;IACAC,YAAA;MACA,KAAAC,OAAA,CAAAC,IAAA;QAAAC,IAAA;MAAA,GAAAC,KAAA;IACA;IAEAC,WAAAb,YAAA;MACA,KAAAA,YAAA,GAAAA,YAAA;MACA,KAAAC,aAAA;MACA,KAAAa,QAAA,GAAAd,YAAA,CAAAe,QAAA;MACA,KAAAC,OAAA,GAAAhB,YAAA,CAAAiB,UAAA;MACA,KAAAC,UAAA,GAAAlB,YAAA,CAAAmB,SAAA;MACA,KAAAC,UAAA,GAAApB,YAAA,CAAAqB,UAAA;MACA,KAAAC,gBAAA,GAAAtB,YAAA,CAAAuB,QAAA,CAAAC,UAAA;IACA;IAEA,MAAAlB,YAAA;MACA,MAAAmB,SAAA,GAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA,cAAAC,QAAA;MACA,MAAApC,KAAA,CACAqC,GAAA,+BAAAN,SAAA,IACAO,IAAA,CAAAC,QAAA;QACA,KAAAlC,QAAA,GAAAkC,QAAA,CAAAnC,IAAA;MACA,GACAc,KAAA,CAAAsB,KAAA;QACAC,OAAA,CAAAD,KAAA,wBAAAA,KAAA;MACA;IACA;IAEA,MAAAE,WAAA;MACA,MAAAC,WAAA;QACAC,MAAA,OAAAtC,YAAA,CAAAsC,MAAA;QACAvB,QAAA,OAAAD,QAAA;QACAG,UAAA,OAAAD,OAAA;QACAG,SAAA,OAAAD,UAAA;QACAG,UAAA,OAAAD,UAAA;QACAG,QAAA;UAAAC,UAAA,OAAAF;QAAA;MACA;MAEA,MAAA5B,KAAA,CACA6C,GAAA,+BAAAvC,YAAA,CAAAsC,MAAA,IAAAD,WAAA,EACAL,IAAA,CAAAC,QAAA;QACAxC,IAAA,CAAA+C,IAAA;UACAC,IAAA;UACAC,KAAA;QACA;QACA,KAAApC,WAAA;MACA,GACAM,KAAA,CAAAsB,KAAA;QACAC,OAAA,CAAAD,KAAA,wBAAAA,KAAA;QACAzC,IAAA,CAAA+C,IAAA;UACAC,IAAA;UACAC,KAAA;QACA;MACA;IACA;IAEA,MAAAC,WAAA3C,YAAA;MACA,IAAAA,YAAA;QAEA,MAAA4C,kBAAA,SAAAnD,IAAA,CAAA+C,IAAA;UACAE,KAAA;UACAD,IAAA;UACAI,gBAAA;UACAC,kBAAA;UACAC,iBAAA;UACAC,iBAAA;QACA;QAEA,IAAAJ,kBAAA,CAAAK,WAAA;UACA,MAAAN,UAAA;YACAL,MAAA,EAAAtC,YAAA,CAAAsC;UACA;UAEA;YACA;YACA,MAAAL,QAAA,SAAAvC,KAAA,CAAAwD,MAAA,0BAAAlD,YAAA,CAAAsC,MAAA;cACAxC,IAAA,EAAA6C,UAAA;YACA;;YAEA;UACA,SAAAT,KAAA;YACAC,OAAA,CAAAD,KAAA,wBAAAA,KAAA;YACAzC,IAAA,CAAA+C,IAAA;cACAC,IAAA;cACAC,KAAA;YACA;UACA;QACA;UACA;UACAP,OAAA,CAAAgB,GAAA;QACA;MACA;QACAhB,OAAA,CAAAD,KAAA;MACA;IACA;EAMA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}