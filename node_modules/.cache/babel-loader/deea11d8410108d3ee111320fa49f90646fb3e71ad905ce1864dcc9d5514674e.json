{"ast":null,"code":"import Swal from \"sweetalert2\";\nimport axios from \"axios\";\nimport AppbarUser from \"./AppbarUser.vue\";\nexport default {\n  components: {\n    AppbarUser\n  },\n  data() {\n    return {\n      desserts: [],\n      dialogVisible: false,\n      selectedMenu: null\n    };\n  },\n  mounted() {\n    this.getMenuData();\n  },\n  methods: {\n    getMenuData() {\n      axios.get(\"http://localhost:9001/menu\").then(response => {\n        this.desserts = response.data;\n      }).catch(error => {\n        console.error(\"There was an error!\", error);\n      });\n    },\n    openDialog(menu) {\n      this.selectedMenu = menu;\n      this.dialogVisible = true;\n    },\n    closeDialog() {\n      this.dialogVisible = false;\n    }\n  }\n};","map":{"version":3,"names":["Swal","axios","AppbarUser","components","data","desserts","dialogVisible","selectedMenu","mounted","getMenuData","methods","get","then","response","catch","error","console","openDialog","menu","closeDialog"],"sources":["src/components/Category.vue"],"sourcesContent":["<template>\r\n  <div style=\"background-color: #e0f2f1; height: 100%\">\r\n    <AppbarUser />\r\n    <div>\r\n      <div>\r\n        <div\r\n          style=\"\r\n            display: flex;\r\n            justify-content: center;\r\n            align-items: center;\r\n            padding-top: 40px;\r\n            font-size: 30px;\r\n          \"\r\n        >\r\n          รายการแนะนำอาหารใต้\r\n        </div>\r\n\r\n        <div>\r\n          <v-row style=\"margin: 50px\">\r\n            <v-col v-for=\"n in desserts\" :key=\"n\" cols=\"4\">\r\n              <v-hover v-slot=\"{ hover }\" open-delay=\"200\">\r\n                <v-card\r\n                  :elevation=\"hover ? 16 : 2\"\r\n                  style=\"width: 500px; height: 300px; border-radius: 20px\"\r\n                  @click=\"openMenuDialog(n)\"\r\n                >\r\n                  <div style=\"padding: 20px\">\r\n                    <div style=\"display: flex; justify-content: center\">\r\n                      <h1>{{ n.nameMenu }}</h1>\r\n                    </div>\r\n\r\n                    <div style=\"padding-top: 20px\">\r\n                      <v-card-title>\r\n                        <p style=\"font-size: 17px\">{{ n.detailMenu }}</p>\r\n                      </v-card-title>\r\n                    </div>\r\n                  </div>\r\n                </v-card>\r\n              </v-hover>\r\n            </v-col>\r\n          </v-row>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Conditional rendering of MenuDialog -->\r\n    <MenuDialog\r\n      v-if=\"dialogVisible\"\r\n      :menuData=\"selectedMenu\"\r\n      @closeDialog=\"closeMenuDialog\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Swal from \"sweetalert2\";\r\nimport axios from \"axios\";\r\nimport AppbarUser from \"./AppbarUser.vue\";\r\nimport MenuDialog from \"./MenuDialog.vue\"; // Import the dialog component\r\n\r\nexport default {\r\n  components: {\r\n    AppbarUser,\r\n    MenuDialog, // Add the dialog component to the components option\r\n  },\r\n  data() {\r\n    return {\r\n      desserts: [],\r\n      dialogVisible: false, // Initialize the dialog visibility property\r\n      selectedMenu: null,\r\n    };\r\n  },\r\n  mounted() {\r\n    this.getMenuData();\r\n  },\r\n  methods: {\r\n    getMenuData() {\r\n      axios\r\n        .get(\"http://localhost:9001/menu\")\r\n        .then((response) => {\r\n          this.desserts = response.data;\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"There was an error!\", error);\r\n        });\r\n    },\r\n    openMenuDialog(menu) {\r\n      this.selectedMenu = menu; // Store the selected menu data\r\n      this.dialogVisible = true; // Set dialog visibility to true\r\n    },\r\n    closeMenuDialog() {\r\n      this.dialogVisible = false; // Set dialog visibility to false\r\n    },\r\n  },\r\n};\r\n</script>\r\nNow, when a card is clicked, the \"MenuDialog\" component will be displayed with the corresponding menu data, and you can close the dialog by calling the closeMenuDialog method.\r\n\r\n\r\n\r\n\r\nUser\r\nno import\r\nChatGPT\r\nIf you don't want to use a separate dialog component and instead want to show a simple dialog without importing any additional components, you can achieve this by using Vue's built-in features. Here's how you can modify your code to create an onclick event to open a dialog without importing external components:\r\n\r\nvue\r\nCopy code\r\n<template>\r\n  <div style=\"background-color: #e0f2f1; height: 100%\">\r\n    <AppbarUser />\r\n    <div>\r\n      <div>\r\n        <div\r\n          style=\"\r\n            display: flex;\r\n            justify-content: center;\r\n            align-items: center;\r\n            padding-top: 40px;\r\n            font-size: 30px;\r\n          \"\r\n        >\r\n          รายการแนะนำอาหารใต้\r\n        </div>\r\n\r\n        <div>\r\n          <v-row style=\"margin: 50px\">\r\n            <v-col v-for=\"n in desserts\" :key=\"n\" cols=\"4\">\r\n              <v-hover v-slot=\"{ hover }\" open-delay=\"200\">\r\n                <v-card\r\n                  :elevation=\"hover ? 16 : 2\"\r\n                  style=\"width: 500px; height: 300px; border-radius: 20px\"\r\n                  @click=\"openDialog(n)\"\r\n                >\r\n                  <div style=\"padding: 20px\">\r\n                    <div style=\"display: flex; justify-content: center\">\r\n                      <h1>{{ n.nameMenu }}</h1>\r\n                    </div>\r\n\r\n                    <div style=\"padding-top: 20px\">\r\n                      <v-card-title>\r\n                        <p style=\"font-size: 17px\">{{ n.detailMenu }}</p>\r\n                      </v-card-title>\r\n                    </div>\r\n                  </div>\r\n                </v-card>\r\n              </v-hover>\r\n            </v-col>\r\n          </v-row>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Conditional rendering of dialog -->\r\n    <div v-if=\"dialogVisible\" class=\"custom-dialog\">\r\n      <v-card>\r\n        <v-card-title>\r\n          <h2>{{ selectedMenu.nameMenu }}</h2>\r\n        </v-card-title>\r\n        <v-card-text>\r\n          <p>{{ selectedMenu.detailMenu }}</p>\r\n        </v-card-text>\r\n        <v-card-actions>\r\n          <v-btn @click=\"closeDialog\">Close</v-btn>\r\n        </v-card-actions>\r\n      </v-card>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Swal from \"sweetalert2\";\r\nimport axios from \"axios\";\r\nimport AppbarUser from \"./AppbarUser.vue\";\r\n\r\nexport default {\r\n  components: {\r\n    AppbarUser,\r\n  },\r\n  data() {\r\n    return {\r\n      desserts: [],\r\n      dialogVisible: false,\r\n      selectedMenu: null,\r\n    };\r\n  },\r\n  mounted() {\r\n    this.getMenuData();\r\n  },\r\n  methods: {\r\n    getMenuData() {\r\n      axios\r\n        .get(\"http://localhost:9001/menu\")\r\n        .then((response) => {\r\n          this.desserts = response.data;\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"There was an error!\", error);\r\n        });\r\n    },\r\n    openDialog(menu) {\r\n      this.selectedMenu = menu;\r\n      this.dialogVisible = true;\r\n    },\r\n    closeDialog() {\r\n      this.dialogVisible = false;\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style lang=\"sass\" scoped>\r\n.v-card.on-hover.theme--dark\r\n  background-color: rgba(#FFF, 0.8)\r\n\r\n  .custom-dialog\r\n    position: fixed\r\n    top: 0\r\n    left: 0\r\n    right: 0\r\n    bottom: 0\r\n    display: flex\r\n    justify-content: center\r\n    align-items: center\r\n    background: rgba(0, 0, 0, 0.5)\r\n    z-index: 999\r\n\r\n  & .v-card\r\n    width: 80%\r\n    max-width: 600px\r\n</style>"],"mappings":"AA2KA,OAAAA,IAAA;AACA,OAAAC,KAAA;AACA,OAAAC,UAAA;AAEA;EACAC,UAAA;IACAD;EACA;EACAE,KAAA;IACA;MACAC,QAAA;MACAC,aAAA;MACAC,YAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,WAAA;EACA;EACAC,OAAA;IACAD,YAAA;MACAR,KAAA,CACAU,GAAA,+BACAC,IAAA,CAAAC,QAAA;QACA,KAAAR,QAAA,GAAAQ,QAAA,CAAAT,IAAA;MACA,GACAU,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,wBAAAA,KAAA;MACA;IACA;IACAE,WAAAC,IAAA;MACA,KAAAX,YAAA,GAAAW,IAAA;MACA,KAAAZ,aAAA;IACA;IACAa,YAAA;MACA,KAAAb,aAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}